#----------------------------------------------------------
# list the metrics to export
# (it's the only required configuration)
jmx.metrics= [trino.execution:name=QueryManager][QueuedQueries] \
             |[trino.execution:name=QueryManager][RunningQueries] \
             |
#	|ClassLoading \
#	|[java.lang:type=GarbageCollector,name=Copy][CollectionCount][][0] \
#	|[java.lang:type=GarbageCollector,name=PS MarkSweep][CollectionCount][][0] \
#	|[java.lang:type=GarbageCollector,name=PS MarkSweep][CollectionTime][Milliseconds][0] \
#	|[java.lang:type=GarbageCollector,name=PS Scavenge][CollectionCount][][0] \
#	|[java.lang:type=GarbageCollector,name=PS Scavenge][CollectionTime][Milliseconds][0] \
#	|[java.lang:type=MemoryPool,name=Code Cache][Usage][Bytes][0] \
#	|[java.lang:type=MemoryPool,name=PS Old Gen][Usage][Bytes][0] \
#	|[java.lang:type=MemoryPool,name=PS Perm Gen][Usage][Bytes][0] \
#	|[java.lang:type=Compilation][] \
#	|[java.lang:type=OperatingSystem][MaxFileDescriptorCount] \
#	|[java.lang:type=OperatingSystem][OpenFileDescriptorCount] \
#	|

# To compute CPU usage, we use one run sampling (and compute the delta)
cpu.sample.duration=1000

#----------------------------------------------------------
# Define the connection parameter if jmx.url is not defined, then it connects to local MBeanServer (default)
# the url of the remote jmx server (support rmi only via <host>:<port> or service:jmx:rmi:///jndi/rmi://....
jmx.url=localhost:9080

#----------------------------------------------------------
# Cloudwatch
# Unit can be Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, None
#exporter.class=io.dable.jmx.Exporter4CloudwatchCli
exporter.class=io.dable.jmx.Exporter4CloudwatchAsyncClient
cloudwatch.region=ap-southeast-2
cloudwatch.namespace=Dable/Trino
#dimensions "key1=value1,key2=value2..."
cloudwatch.dimensions=ClusterName=dp_dev
